name: Flask CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: new_password
          POSTGRES_DB: postgres3.0
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade flask_wtf
          pip install -r requirements.txt

      - name: Set up environment variables
        run: |
          echo "DATABASE_URL=postgresql://postgres:new_password@localhost:5432/postgres3.0" >> $GITHUB_ENV
          echo "FLASK_ENV=test" >> $GITHUB_ENV
          echo "SECRET_KEY=test_key" >> $GITHUB_ENV

      - name: Run migrations
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
        run: |
          flask db upgrade

      - name: Run tests
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
        run: |
          pytest tests/

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies for deploy
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Deploy to Production
        run: |
          echo "Add your deployment commands here, e.g., docker-compose up -d"